pipeline {
    environment {
        APP_NAME = 'REPLACE_ME_APP_NAME'
	    DOCKER_REPO = 'REPLACE_ME_IMAGE_REPO'
    }
    agent any
    stages {
        stage("CI Config Analysis") {
            steps {
		        script {
                    ciConfigAnalysis
                }
	        }
        }
	    stage('Test') {
            agent {
                docker {
                    image 'maven:3.6.0-jdk-8-slim'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh 'mvn versions:set -DnewVersion=$IMAGE_TAG'
                    sh 'mvn versions:commit'
                    sh 'mvn -B clean org.jacoco:jacoco-maven-plugin:prepare-agent test -Dmaven.test.failure.ignore=true'
                    sh 'mvn -B sonar:sonar'
                }
            }
        }
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('Build & Push Image') {
            agent {
                docker {
                    image 'maven:3.6.0-jdk-8-slim'
                    args '-u root -v $HOME/.m2:/root/.m2 -v $HOME/.docker:/root/.docker -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker'
                }
            }
            steps {
	            sh 'mvn versions:set -DnewVersion=$IMAGE_TAG'
		        sh 'mvn versions:commit'
                sh 'mvn -B -DskipTests clean package'
                sh 'docker build --build-arg JAR_FILE=target/$APP_NAME-$IMAGE_TAG.jar -t $DOCKER_REPO$APP_NAME:$IMAGE_TAG .'
                sh 'docker push $DOCKER_REPO$APP_NAME:$IMAGE_TAG'
	    }
        }
        stage('Deploy') {
            steps {
                script {
                    sh 'helm lint charts/$APP_NAME'
                    sh 'helm upgrade --kube-context $USE_K8S_CONTEXT --debug --install --set-string $SET_STRING $APP_NAME charts/$APP_NAME'
                    k8sHealthCheck $APP_NAME $K8S_NAMESPACE $K8S_HEALTH_CHECK_WAIT_TIME_Seconds $USE_K8S_CONTEXT
                }
            }
        }
    }
}